// @version=4
// tradingview@BlueJayBird
// @author @BlueJayBird
study(title="Moving Averages, by @BlueJayBird", shorttitle="MAs", format=format.price, overlay=true)

// MAD Scalping ------------------------------------------------------------------------
// Enable checkboxes
enable_a = input(true, title="Enable MAs[aA][20]")
enable_bc = input(true, title="Enable MAs[b][c]")
enable_BC = input(false, title="Enable MAs[B][C]")
enable_de = input(true, title="Enable MAs[d][e]")
enable_DE = input(false, title="Enable MAs[D][E]")
enable_custom = input(false, title="Enable Custom MA")
enable_common = input(false, title="Enable  MAs[20][50][200]")
movingAverage = input(title = "MA type", defval = "EMA", options = ["EMA", "RMA","SMA", "VWMA", "WMA"])
price = input(type=input.source, defval=low, title="MA Source")
length_custom = input(defval=9, title="Custom MA Length")

// Style
thickness = 2
transp_ma = 40
transp_fill = 90
transp_fill_20 = 80
securityGap = barmerge.gaps_off
securityLookahead = barmerge.lookahead_on

// colors
color_a = color.aqua
color_bB = color.fuchsia
color_cC = color.yellow
color_dD = color.orange
color_eE = color.lime
color_custom = color.silver


//  MOVING AVERAGES
ma20 = ema(price, 20),		ma50 = ema(price, 50),		ma60 = ema(price, 60)
ma80 = ema(price, 80),		ma100 = ema(price, 100),	ma120 = ema(price, 120)
ma140 = ema(price, 140),	ma200 = ema(price, 200),	ma300 = ema(price, 300)
ma320 = ema(price, 320),	ma400 = ema(price, 400),	ma480 = ema(price, 480)
ma600 = ema(price, 600),	ma840 = ema(price, 840),	ma1200 = ema(price, 1200)
ma1600 = ema(price, 1600),	ma1920 = ema(price, 1920),	ma3360 = ema(price, 3360)
ma3600 = ema(price, 3600),	ma3840 = ema(price, 3840),	ma4800 = ema(price, 4800)
maCustom = ema(price, length_custom)

// Imported Moving Averages
ma20security = ema(price, 20)
ma20_5 = security(syminfo.tickerid, "5", ma20security, securityGap, securityLookahead)
ma20_30 = security(syminfo.tickerid, "30", ma20security, securityGap, securityLookahead)
ma20_60 = security(syminfo.tickerid, "60", ma20security, securityGap, securityLookahead)
ma20_240 = security(syminfo.tickerid, "240", ma20security, securityGap, securityLookahead)

// MA Values
if movingAverage == "EMA"
	ma20 := ema(price, 20),		ma50 := ema(price, 50),		ma60 := ema(price, 60)
	ma80 := ema(price, 80),		ma100 := ema(price, 100),	ma120 := ema(price, 120)
	ma140 := ema(price, 140),	ma200 := ema(price, 200),	ma300 := ema(price, 300)
	ma320 := ema(price, 320),	ma400 := ema(price, 400),	ma480 := ema(price, 480)
	ma600 := ema(price, 600),	ma840 := ema(price, 840),	ma1200 := ema(price, 1200)
	ma1600 := ema(price, 1600), ma1920 := ema(price, 1920),	ma3360 := ema(price, 3360)
	ma3600 := ema(price, 3600),	ma3840 := ema(price, 3840),	ma4800 := ema(price, 4800)
	maCustom := ema(price, length_custom)
if movingAverage == "RMA"
	ma20 := rma(price, 20),		ma50 := rma(price, 50),		ma60 := rma(price, 60)
	ma80 := rma(price, 80),		ma100 := rma(price, 100),	ma120 := rma(price, 120)
	ma140 := rma(price, 140),	ma200 := rma(price, 200),	ma300 := rma(price, 300)
	ma320 := rma(price, 320),	ma400 := rma(price, 400),	ma480 := rma(price, 480)
	ma600 := rma(price, 600),	ma840 := rma(price, 840),	ma1200 := rma(price, 1200)
	ma1600 := rma(price, 1600), ma1920 := rma(price, 1920),	ma3360 := rma(price, 3360)
	ma3600 := rma(price, 3600),	ma3840 := rma(price, 3840),	ma4800 := rma(price, 4800)
	maCustom := rma(price, length_custom)
if movingAverage == "SMA"
	ma20 := sma(price, 20),		ma50 := sma(price, 50),		ma60 := sma(price, 60)
	ma80 := sma(price, 80),		ma100 := sma(price, 100),	ma120 := sma(price, 120)
	ma140 := sma(price, 140),	ma200 := sma(price, 200),	ma300 := sma(price, 300)
	ma320 := sma(price, 320),	ma400 := sma(price, 400),	ma480 := sma(price, 480)
	ma600 := sma(price, 600),	ma840 := sma(price, 840),	ma1200 := sma(price, 1200)
	ma1600 := sma(price, 1600), ma1920 := sma(price, 1920),	ma3360 := sma(price, 3360)
	ma3600 := sma(price, 3600),	ma3840 := sma(price, 3840),	ma4800 := sma(price, 4800)
	maCustom := sma(price, length_custom)
if movingAverage == "VWMA"
	ma20 := vwma(price, 20),		ma50 := vwma(price, 50),		ma60 := vwma(price, 60)
	ma80 := vwma(price, 80),		ma100 := vwma(price, 100),		ma120 := vwma(price, 120)
	ma140 := vwma(price, 140),		ma200 := vwma(price, 200),		ma300 := vwma(price, 300)
	ma320 := vwma(price, 320),		ma400 := vwma(price, 400),		ma480 := vwma(price, 480)
	ma600 := vwma(price, 600),		ma840 := vwma(price, 840),		ma1200 := vwma(price, 1200)
	ma1600 := vwma(price, 1600),	ma1920 := vwma(price, 1920),	ma3360 := vwma(price, 3360)
	ma3600 := vwma(price, 3600),	ma3840 := vwma(price, 3840),	ma4800 := vwma(price, 4800)
	maCustom := vwma(price, length_custom)
if movingAverage == "WMA"
	ma20 := wma(price, 20),		ma50 := wma(price, 50),		ma60 := wma(price, 60)
	ma80 := wma(price, 80),		ma100 := wma(price, 100),	ma120 := wma(price, 120)
	ma140 := wma(price, 140),	ma200 := wma(price, 200),	ma300 := wma(price, 300)
	ma320 := wma(price, 320),	ma400 := wma(price, 400),	ma480 := wma(price, 480)
	ma600 := wma(price, 600),	ma840 := wma(price, 840),	ma1200 := wma(price, 1200)
	ma1600 := wma(price, 1600), ma1920 := wma(price, 1920),	ma3360 := wma(price, 3360)
	ma3600 := wma(price, 3600),	ma3840 := wma(price, 3840),	ma4800 := wma(price, 4800)
	maCustom := wma(price, length_custom)

// Favorite timeframes: 1m, 15m, 1h, 4h, 1D, 1W

// emaCustom
plot(enable_custom ? maCustom : na, title="[custom]", color=color_custom, linewidth=thickness, transp=transp_ma, editable=true) // emaCustom All Timeframes

// ema20, is is used in all timeframes
ma20_plot_a = plot(enable_a or enable_common ? ma20 : na, title="[aA][20]", color=color_a, linewidth=thickness, transp=transp_ma, editable=false) // ema20 All Timeframes

// 1m timeframe
// 1m ab aB
ma100_plot_b = plot(enable_bc and timeframe.period == "1" ? ma100 : na, title="[b]", color=color_bB, linewidth=thickness, transp=transp_ma, editable=false) // 5m
ma20_5_plot_B = plot(enable_BC and timeframe.period == "1" ? ma20_5 : na, title="[B]", color=color_bB, linewidth=thickness, transp=transp_ma, editable=false) // 5m
bgc_ab = iff(ma20 > ma100, color.new(color.green, transp_fill_20), color.new(color.red, transp_fill))
bgc_aB = iff(ma20 > ma100, color.new(color.green, transp_fill_20), color.new(color.red, transp_fill))
bgc_bB = color.new(color_bB, transp_fill)
fill(ma20_plot_a, ma100_plot_b, bgc_ab, editable=false)
fill(ma20_plot_a, ma20_5_plot_B, bgc_aB, editable=false)
fill(ma100_plot_b, ma20_5_plot_B, bgc_bB, editable=false)
// 1m cC
ma600_plot_c = plot(enable_bc and timeframe.period == "1" ? ma600 : na, title="[c]", color = color_cC, linewidth=thickness, transp=transp_ma, editable=false) // 30m
ma20_30_C = plot(enable_BC and timeframe.period == "1" ? ma20_30 : na, title="[C]", color=color_cC, linewidth=thickness, transp=transp_ma, editable=false) // 30m
bgc_cC = color.new(color_cC, transp_fill)
fill(ma600_plot_c, ma20_30_C, bgc_cC, editable=false)
// 1m dD
ma1200_plot_d = plot(enable_de and timeframe.period == "1" ? ma1200 : na, title="[d]", color = color_dD, linewidth=thickness, transp=transp_ma, editable=false) // 1h
ma20_60_D = plot(enable_DE and timeframe.period == "1" ? ma20_60 : na, title="[D]", color=color_dD, linewidth=thickness, transp=transp_ma, editable=false) // 1h
bgc_dD = color.new(color_dD, transp_fill)
fill(ma1200_plot_d, ma20_60_D, bgc_dD, editable=false)
// 1m eE
ma4800_plot_e = plot(enable_de and timeframe.period == "1" ? ma4800 : na, title="[e]", color = color_eE, linewidth=thickness, transp=transp_ma, editable=false) // 4h
ma20_240_E = plot(enable_DE and timeframe.period == "1" ? ma20_240 : na, title="[E]", color=color_eE, linewidth=thickness, transp=transp_ma, editable=false) // 4h
bgc_eE = color.new(color_eE, transp_fill)
fill(ma4800_plot_e, ma20_240_E, bgc_eE, editable=false)


// 3m timeframe
// bgc_3m = iff(ema20 > ema100, color.new(color.green, 80), color.new(color.red, 80))
// ema20_3m = plot(enable3m and enableAll and ema20 and timeframe.period == "3" ? ema20 : na, title=" 3m[A]", color=colorQuicker, linewidth=thickness, transp=transp_ma, editable=false)
// ema100_3m = plot(enable3m and enableAll and ema100 and timeframe.period == "3" ? ema100 : na, title=" 15m[B]", color=colorQuick, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable3m and enableAll and ema400 and timeframe.period == "3" ? ema400 : na, title=" 1h[C]", color=colorSlow, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable3m and enableAll and enableSecondary and ema1600 and timeframe.period == "3" ? ema1600 : na, title="4h", color=colorSlower, linewidth=thickness, transp=transp_ma, editable=false)
// //plot(enable3m and enableSecondary and ema300 and timeframe.period == "3" ? ema300 : na, title="15m", color=colorSlow, linewidth=thickness, transp=transp_ma, editable=false)
// fill(ema20_3m, ema100_3m, bgc_3m)

// // 5m timeframe
// bgc_5m = iff(ema20 > ema60, color.new(color.green, 80), color.new(color.red, 80))
// ema20_5m = plot(enable5m and enableAll and ema20 and timeframe.period == "5" ? ema20 : na, title=" 5m[A]", color=colorQuicker, linewidth=thickness, transp=transp_ma, editable=false)
// ema60_5m = plot(enable5m and enableAll and ema60 and timeframe.period == "5" ? ema60 : na, title=" 15m[B]", color=colorQuick, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable5m and enableAll and ema80 and timeframe.period == "5" ? ema80 : na, title=" 1h[C]", color=colorSlow, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable5m and enableAll and enableSecondary and ema320 and timeframe.period == "5" ? ema320 : na, title="4h", color=colorSlower, linewidth=thickness, transp=transp_ma, editable=false)
// // plot(enable5m and enableSecondary and ema4800 and timeframe.period == "5" ? ema4800 : na, title="4h", color=colorVerySlow, linewidth=thickness, transp=transp_ma, editable=false)
// fill(ema20_5m, ema60_5m, bgc_5m)

// 15m timeframe
// bgc_15m = iff(ema20 > ema80, color.new(color.green, 80), color.new(color.red, 80))
// ema20_15m = plot(enable15m and enableAll and ema20 and timeframe.period=="15" ? ema20 : na, title=" 15m[A]", color=colorQuicker, linewidth=thickness, transp=transp_ma, editable=false)
// ema80_15m = plot(enable15m and enableAll and ema80 and timeframe.period=="15" ? ema80 : na, title=" 1h[B]", color=colorQuick, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable15m and enableAll and ema320 and timeframe.period=="15" ? ema320 : na, title=" 4h[C]", color=colorSlow, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable15m and enableAll and enableSecondary and ema1920 and timeframe.period=="15" ? ema1920 : na, title="1D", color=colorSlower, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable15m and enableAll and enableSecondary and ema3840 and timeframe.period=="15" ? ema3840 : na, title="2D", color=colorVerySlow, linewidth=thickness, transp=transp_ma, editable=false)
// fill(ema20_15m, ema80_15m, bgc_15m)

// // // 30m timeframe 
// // // TODO
// // ema20_30m = plot(enable30m and enableAll and ema20 and timeframe.period=="30" ? ema20 : na, title=" 30m[A]", color=colorQuicker, linewidth=thickness, transp=transp_ma, editable=false)

// 1h timeframe
ma80_plot_b = plot(enable_bc and timeframe.period == "60" ? ma80 : na, title="[b]", color=color_bB, linewidth=thickness, transp=transp_ma, editable=false) // 4h
ma20_240_plot_B = plot(enable_BC and timeframe.period == "60" ? ma20_240 : na, title="[B]", color=color_bB, linewidth=thickness, transp=transp_ma, editable=false) // 4h
bgc_ab_60 = iff(ma20 > ma80, color.new(color.green, transp_fill_20), color.new(color.red, transp_fill))
bgc_aB_60 = iff(ma20 > ma20_240, color.new(color.green, transp_fill_20), color.new(color.red, transp_fill))
bgc_bB_60 = color.new(color_bB, transp_fill)
fill(ma20_plot_a, ma80_plot_b, bgc_ab_60, editable=false)
fill(ma20_plot_a, ma20_240_plot_B, bgc_aB_60, editable=false)
fill(ma80_plot_b, ma20_240_plot_B, bgc_bB_60, editable=false)

// // 4h timeframe
// bgc_4h = iff(ema20 > ema120, color.new(color.green, 80), color.new(color.red, 80))
// ema20_4h = plot(enable4h and enableAll and ema20 and timeframe.period == "240" ? ema20 : na, title=" 4h[A]", color=colorQuicker, linewidth=thickness, transp=transp_ma, editable=false)
// ema120_4h = plot(enable4h and enableAll and ema120 and timeframe.period == "240" ? ema120 : na, title=" 1D[B]", color=colorQuick, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable4h and enableAll and ema840 and timeframe.period == "240" ? ema840 : na, title=" 1W[C]", color=colorSlow, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable4h and enableAll and enableSecondary  and ema3600 and timeframe.period == "240" ? ema3600 : na, title="1M", color=colorSlower, linewidth=thickness, transp=transp_ma, editable=false)
// fill(ema20_4h, ema120_4h, bgc_4h)

// // 1D timeframe
// bgc_1D = iff(ema20 > ema120, color.new(color.green, 80), color.new(color.red, 80))
// ema20_1D = plot(enable1D and enableAll and ema20 and timeframe.period == "D" ? ema20 : na, title=" 1D[A]", color=colorQuicker, linewidth=thickness, transp=transp_ma, editable=false)
// ema120_1D = plot(enable1D and enableAll and ema120 and timeframe.period == "D" ? ema120 : na, title=" 1W[B]", color=colorQuick, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enable1D and enableAll and ema600 and timeframe.period == "D"  ? ema600 : na, title="1M [C]", color=colorSlow, linewidth=thickness, transp=transp_ma, editable=false)
// fill(ema20_1D, ema120_1D, bgc_1D)


// 1W timeframe
// ma20_common_W = plot(enableCommon and enableAll and ema20 and timeframe.period == "W" ? ema20 : na, title=" 20ema[A]", color=colorQuicker, linewidth=thickness, transp=transp_ma, editable=false)
// ma50_common_W = plot(enableCommon and enableAll and ema50 and timeframe.period == "W" ? ema50 : na, title=" 50ema[B]", color=colorQuick, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enableCommon and enableAll and ema200 and timeframe.period == "W" ? ema200 : na, title=" 200ema[C]", color=colorSlow, linewidth=thickness, transp=transp_ma, editable=false)
// fill(ema20_common_W, ema50_common_W, bgc_common)
// // 1M timeframe
// ema20_common_M = plot(enableCommon and enableAll and ema20 and timeframe.period == "M" ? ema20 : na, title=" 20ema[A]", color=colorQuicker, linewidth=thickness, transp=transp_ma, editable=false)
// ema50_common_M = plot(enableCommon and enableAll and ema50 and timeframe.period == "M" ? ema50 : na, title=" 50ema[B]", color=colorQuick, linewidth=thickness, transp=transp_ma, editable=false)
// plot(enableCommon and enableAll and ema200 and timeframe.period == "M" ? ema200 : na, title=" 200ema[C]", color=colorSlow, linewidth=thickness, transp=transp_ma, editable=false)
// fill(ema20_common_M, ema50_common_M, bgc_common)

// Common values, timeframe
bgc_common = iff(ma20 > ma50, color.new(color.green, 80), color.new(color.red, 80))
ma50_plot = plot(enable_common ? ma50 : na, title="[50]", color=color_bB, linewidth=thickness, transp=transp_ma, editable=false)
plot(enable_common ? ma200 : na, title="[200]", color=color_cC, linewidth=thickness, transp=transp_ma, editable=false)
fill(ma20_plot_a, ma50_plot, bgc_common, editable=false)


// TABLE: 1M = 30 days
// RANGES		Visible 20ema		Length Values									        Double checked
//  								1m      15m		1h		4h		1D		1W		1M      -
// 1m           1m, 15m, 1h, 4h     20      300     1200    4800    -       -       -
// 15m			15m, 1h, 4h, 1D		-       20 		80	 	320 	1920	-		-		Yes
// 1h			1h, 4h, 1D, 1W		-		-       20 		80		480 	3360	-		Yes	
// 4h			4h, 1D, 1W, 1M		-		-		-       20 		120		840		3600	Yes
// 1D			1D, 1W, 1M			-		-		-		-       20		140		600		Yes
// Common		All ranges			20	 	50	 	200     -       -       -       -       Not necessary
// END -------------------------------------------------------------------------

// RSI Signals -----------------------------------------------------------------
// @author Matthew J. Slabosz
// www.zenandtheartoftrading.com
// @modifier carloswm85

// Get user input
lengthRSI = 14
obRSI = 70
osRSI = 30
enableRSIall =  input(title="Enable RSI Signals", type=input.bool, defval=true)
drawOnRT = true // "Draw On Candles Yet To Close"
rsi = rsi(close, lengthRSI)
transpRSI = 0

// RSI Signal Levels: Def Values, 1, 5, 15, 60, 240
// R1 Level
enableR1 = input(type=input.bool, defval=true, title="Enable RSI Signal 1 (R1)")
signalR1 = input(title = "R1 Resolution", defval = "1", type=input.resolution)
colorR1 = input(title = "R1 Color", defval = color.green, type=input.color)
securityR1 = security(syminfo.tickerid, signalR1 , rsi)
obR1 = securityR1 >= obRSI
osR1 = securityR1 <= osRSI
plotshape(obR1 and enableR1 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR1, transp=transpRSI, text="", style=shape.triangledown, title="Overbought R1")
plotshape(osR1 and enableR1 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR1, transp=transpRSI, text="", style=shape.triangleup,	title = "Oversold R1", location=location.belowbar)

enableR2 = input(type=input.bool, defval=true, title="Enable RSI Signal 2 (R2)")
signalR2 = input(title = "R2 Resolution", defval = "5", type=input.resolution)
colorR2 = input(title = "R2 Color", defval = color.yellow, type=input.color)
securityR2 = security(syminfo.tickerid, signalR2 , rsi)
obR2 = securityR2 >= obRSI
osR2 = securityR2 <= osRSI
plotshape(obR2 and enableR2 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR2, transp=transpRSI, text="", style=shape.triangledown, title="Overbought R2")
plotshape(osR2 and enableR2 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR2, transp=transpRSI, text="", style=shape.triangleup,	title = "Oversold R2", location=location.belowbar)

enableR3 = input(type=input.bool, defval=true, title="Enable RSI Signal 3 (R3)")
signalR3 = input(title = "R3 Resolution", defval = "15", type=input.resolution)
colorR3 = input(title = "R3 Color", defval = color.red, type=input.color)
securityR3 = security(syminfo.tickerid, signalR3 , rsi)
obR3 = securityR3 >= obRSI
osR3 = securityR3 <= osRSI
plotshape(obR3 and enableR3 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR3, transp=transpRSI, text="", style=shape.triangledown, title="Overbought R3")
plotshape(osR3 and enableR3 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR3, transp=transpRSI, text="", style=shape.triangleup,	title = "Oversold R3", location=location.belowbar)

enableR4 = input(type=input.bool, defval=true, title="Enable RSI Signal 4 (R4)")
signalR4 = input(title = "R4 Resolution", defval = "60", type=input.resolution)
colorR4 = input(title = "R4 Color", defval = color.white, type=input.color)
securityR4 = security(syminfo.tickerid, signalR4 , rsi)
obR4 = securityR4 >= obRSI
osR4 = securityR4 <= osRSI
plotshape(obR4 and enableR4 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR4, transp=transpRSI, text="", style=shape.triangledown, title="Overbought R4")
plotshape(osR4 and enableR4 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR4, transp=transpRSI, text="", style=shape.triangleup,	title = "Oversold R4", location=location.belowbar)

enableR5 = input(type=input.bool, defval=true, title="Enable RSI Signal 5 (R5)")
signalR5 = input(title = "R5 Resolution", defval = "240", type=input.resolution)
colorR5 = input(title = "R5 Color", defval = color.silver, type=input.color)
securityR5 = security(syminfo.tickerid, signalR5 , rsi)
obR5 = securityR5 >= obRSI
osR5 = securityR5 <= osRSI
plotshape(obR5 and enableR5 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR5, transp=transpRSI, text="", style=shape.triangledown, title="Overbought R5")
plotshape(osR5 and enableR5 and enableRSIall and (barstate.ishistory or drawOnRT), color=colorR5, transp=transpRSI, text="", style=shape.triangleup,	title = "Oversold R5", location=location.belowbar)
// END -------------------------------------------------------------------------

// // BOLLINGER BANDS
// enableBB = input(false, title="Enable Bollinger Bands")
// length = timeframe.period == "1" ? 100 : timeframe.period == "3" ? 100 : timeframe.period == "5" ? 60 : timeframe.period == "15" ? 80 : timeframe.period == "30" ? 20 : timeframe.period == "60" ? 80 : timeframe.period == "240" ? 120 : timeframe.period == "D" ? 120 : timeframe.period == "W" ? 20 : 	timeframe.period == "M" ? 20 :	na
// src = input(low, title="Source BB")
// mult = input(2.0, minval=0.001, maxval=50, title="StdDev BB")
// basis = ema(src, length)
// dev = mult * stdev(src, length)
// upper = basis + dev
// lower = basis - dev
// offset = input(0, "Offset BB", type = input.integer, minval = -500, maxval = 500)
// plot(enableBB ? basis : na, "Basis BB", color=#872323, offset = offset, transp=100, editable = false)
// p1 = plot(enableBB ? upper : na, "Upper BB", color = colorQuick, offset = offset)
// p2 = plot(enableBB ? lower : na, "Lower BB", color = colorQuick, offset = offset)
// fill(p1, p2, title = "Background BB", color=#198787, transp=96)
// // END -------------------------------------------------------------------------
